{
  "name": "[Agent Circle's N8N Workflow] Automated AI Image Creator",
  "nodes": [
    {
      "parameters": {
        "content": "## üß™ TEST BEFORE DEPLOYING\n1. Send test email\n2. Check Sheets output\n3. Verify summary quality\n4. Adjust filters/prompt as needed",
        "height": 220,
        "width": 300,
        "color": 6
      },
      "id": "b5e2438d-c75f-4049-8e5f-4e69e79f9265",
      "name": "Test Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -400,
        -320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "mode": "url",
          "value": "YOUR_GOOGLE_SHEETS_DOCUMENT_ID"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "YOUR_GOOGLE_SHEETS_URL",
          "cachedResultName": "Sheet1"
        },
        "columns": {
          "value": {
            "Date": "={{ $('info1').item.json.Date }}",
            "summary": "={{ $json.output }}",
            "subject ": "={{ $('info1').item.json.Subject }}",
            "sender name": "={{ $('info1').item.json[\"Sender Name\"] }}",
            "sender email": "={{ $('info1').item.json[\"Sender Email\"] }}"
          },
          "schema": [
            {
              "id": "sender name",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "sender name",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "sender email",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "sender email",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "subject ",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "subject ",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "summary",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "summary",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Date",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [
            "sender name"
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "cdcd12bc-575a-4308-bf27-b105545a6b55",
      "name": "Log to Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -784,
        -224
      ],
      "typeVersion": 4
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Please read this email \"{{ $json.Content }}\" and provide a very short, concise summary containing only the most important information. Keep the summary as brief as possible without losing essential details. ",
        "options": {}
      },
      "id": "b7b9a3e7-76d6-4aa8-95f8-dd7a6bad235d",
      "name": "AI Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -1360,
        -288
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "=everyHour",
              "minute": 59
            }
          ]
        },
        "simple": false,
        "filters": {
          "labelIds": [
            "CATEGORY_PERSONAL"
          ]
        },
        "options": {
          "downloadAttachments": false
        }
      },
      "id": "71dd938b-acc8-445d-8c70-44a01692c8fc",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "position": [
        -2368,
        -192
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "c1d2e3f4-g5h6-i7j8-k9l0-m1n2o3p4q5r6",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json[\"Sender Name\"] }}",
              "rightValue": "YOUR_SENDER_NAME_FILTER"
            }
          ]
        },
        "options": {}
      },
      "id": "1432238a-f24b-4ae3-8801-05f5700ba5f8",
      "name": "Check Valid Email",
      "type": "n8n-nodes-base.if",
      "position": [
        -1712,
        -192
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "model": "llama-3.1-8b-instant",
        "options": {}
      },
      "id": "76664a28-d5ca-40ad-9f4e-f3145378de47",
      "name": "Groq Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "position": [
        -1504,
        224
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const items = [];\n\nfor (const item of $input.all()) {\n  const emailData = item.json;\n  \n  // Handle sender information (unchanged)\n  let senderEmail = '';\n  let senderName = '';\n\n  if (emailData.from?.value?.[0]) {\n    senderEmail = emailData.from.value[0].address || '';\n    senderName = emailData.from.value[0].name || senderEmail;\n  } else if (emailData.from?.text) {\n    const emailMatch = emailData.from.text.match(/<([^>]+)>/) || \n                      emailData.from.text.match(/([^\\s]+@[^\\s]+)/);\n    senderEmail = emailMatch ? emailMatch[1] : emailData.from.text;\n    \n    const nameMatch = emailData.from.text.match(/^([^<]+)/);\n    senderName = nameMatch ? nameMatch[1].trim().replace(/\\\"/g, '') : senderEmail;\n  }\n\n  // Format date (unchanged)\n  const receivedDate = new Date(emailData.date || emailData.receivedTime);\n  const formattedDate = receivedDate.toLocaleString('en-US', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: true\n  });\n\n  // FIXED CONTENT EXTRACTION\n  let emailContent = '';\n  \n  // 1. First priority: Plain text version\n  if (emailData.text) {\n    emailContent = emailData.text;\n  } \n  // 2. Second priority: HTML version (convert to plain text)\n  else if (emailData.html) {\n    emailContent = emailData.html\n      .replace(/<style[^>]*>.*?<\\/style>/gs, '')  // Remove CSS\n      .replace(/<[^>]*>/g, ' ')                   // Strip HTML tags\n      .replace(/\\s+/g, ' ')                       // Collapse whitespace\n      .trim();\n  }\n  // 3. Fallback to other possible fields\n  else if (emailData.body || emailData.textPlain || emailData.textHtml) {\n    emailContent = emailData.body || emailData.textPlain || emailData.textHtml;\n  }\n\n  // Truncate content if too long\n  const maxContentLength = 5000;\n  if (emailContent.length > maxContentLength) {\n    emailContent = emailContent.substring(0, maxContentLength) + '... [truncated]';\n  }\n\n  // Create row data\n  const rowData = {\n    'Date': formattedDate,\n    'Sender Name': senderName,\n    'Sender Email': senderEmail,\n    'Subject': emailData.subject || 'No Subject',\n    'Content': emailContent,\n    //'Message ID': emailData.messageId || '',\n    'Has Attachments': emailData.attachments?.length > 0 ? 'Yes' : 'No'\n  };\n  \n  items.push({ json: rowData });\n}\n\nreturn items;"
      },
      "id": "ac53b1ff-d392-4656-a2fb-a2ed791b831d",
      "name": "info1",
      "type": "n8n-nodes-base.code",
      "position": [
        -2032,
        -192
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "## üîë Step 1: Add Gmail Credentials üëá",
        "height": 400,
        "width": 260,
        "color": 5
      },
      "id": "e49870f6-682d-44a4-a408-78b2d7efcdc5",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2448,
        -400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üìß Step 2: Email Processing Node\n",
        "height": 400,
        "width": 260,
        "color": 5
      },
      "id": "93801e49-ef20-47fc-9f75-29ac20b8f069",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2112,
        -400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ‚öôÔ∏è Step 3: Sender Filter\n‚Ä¢ Replace 'YOUR_SENDER_NAME_FILTER'\n‚Ä¢ Only emails from this sender will proceed\n‚Ä¢ Supports multiple conditions",
        "height": 400,
        "width": 260,
        "color": 5
      },
      "id": "1dc2e350-6b11-4c76-af45-869c2de36014",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1792,
        -400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ‚úçÔ∏è Step 4: Customize AI Prompt\n‚Ä¢ Default: Short email summary\n‚Ä¢ Change tone/formality as needed",
        "height": 420,
        "width": 360,
        "color": 5
      },
      "id": "a6106040-2a33-40ed-be62-5029beb46e34",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1408,
        -432
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ü§ñ Step 5: AI Configuration\n1. Add Groq API key\n2. Or replace with other AI model\n",
        "height": 220,
        "width": 260,
        "color": 5
      },
      "id": "067f784e-6d49-4e22-a0af-6f836413fb3f",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1808,
        128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## üìä Step 6: Google Sheets Setup\n1. Add Google credentials\n2. Paste Sheet URL\n3. Select target sheet\n4. Columns auto-map to email data",
        "height": 400,
        "width": 500,
        "color": 4
      },
      "id": "47981975-4f11-451f-af88-464c2d3a19ea",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -960,
        -400
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## ‚úÖ Expected Output Format\nColumns: Sender | Date | Email | Subject | Summary\n\n![Example Table](https://cdn.ablebits.com/_img-blog/google-sheets-create-table/table-format.webp)",
        "height": 420,
        "width": 700,
        "color": 4
      },
      "id": "4031546d-8479-4f00-b091-11ffa0cf4880",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1040,
        64
      ],
      "typeVersion": 1
    }
  ],
  "pinData": {},
  "connections": {
    "info1": {
      "main": [
        [
          {
            "node": "Check Valid Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Log to Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "info1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Check Valid Email": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b433d4f27e0b867ab8445880aeb2e482fd06258f080b8e74806a17210cd8bd98"
  },
  "tags": []
}
